// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using DatPhatAcc.AccountingDbContext;
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace DatPhatAcc.AccountingDbContext
{
    public partial interface IACCOUNTINGContextProcedures
    {
        Task<int> AccountingBusinessCreateMarkDateAsync(string TransactionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingBusinessGetHrSalarySheetDetailsResult>> AccountingBusinessGetHrSalarySheetDetailsAsync(string SalarySheetID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingBusinessGetHrSalarySheetsResult>> AccountingBusinessGetHrSalarySheetsAsync(string Status, string StartDate, string EndDate, string SalarySheetID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingBusinessGetRetailTranDetailResult>> AccountingBusinessGetRetailTranDetailAsync(string TransactionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingBusinessGetRetailTranDetailByGoodResult>> AccountingBusinessGetRetailTranDetailByGoodAsync(string GoodID, string Barcode, string ZoneID, string WholeSale, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingBusinessGetRetailTranDetailByPacketResult>> AccountingBusinessGetRetailTranDetailByPacketAsync(string PacketID, string WholeSale, string TransactionID, string PacketDetail, string Status, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingBusinessGetRetailTranPromoDetailResult>> AccountingBusinessGetRetailTranPromoDetailAsync(string TransactionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingBusinessGetTranferBalanceAccountResult>> AccountingBusinessGetTranferBalanceAccountAsync(string ImExpMethodCode, string DateFrom, string DateTo, string ZoneID, DataTable TempTranfer, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingBusinessGetTranferBalanceAccount_20191105Result>> AccountingBusinessGetTranferBalanceAccount_20191105Async(string ImExpMethodCode, string DateFrom, string DateTo, string ZoneID, DataTable TempTranfer, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingBusinessGetTranferBalanceAccountTestResult>> AccountingBusinessGetTranferBalanceAccountTestAsync(string ImExpMethodCode, string DateFrom, string DateTo, string ZoneID, DataTable TempTranfer, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingBusinessGetTransactionAccountingResult>> AccountingBusinessGetTransactionAccountingAsync(string TransactionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingBusinessGetTransactionDetailsResult>> AccountingBusinessGetTransactionDetailsAsync(string TransactionID, string StockCheck, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingBusinessGetTransactionDetails_save_20190911Result>> AccountingBusinessGetTransactionDetails_save_20190911Async(string TransactionID, string StockCheck, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingBusinessGetTransactionDetails_tmpResult>> AccountingBusinessGetTransactionDetails_tmpAsync(string TransactionID, string StockCheck, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingBusinessGetTransactionExpiredDateDetailsResult>> AccountingBusinessGetTransactionExpiredDateDetailsAsync(string TransactionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingBusinessGetTransactionExpiredDateDetailsAllResult>> AccountingBusinessGetTransactionExpiredDateDetailsAllAsync(string TransactionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingBusinessGetTransactionExpiredDateDetailsAll_save_20190911Result>> AccountingBusinessGetTransactionExpiredDateDetailsAll_save_20190911Async(string TransactionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingBusinessGetTransactionFeeDetailsResult>> AccountingBusinessGetTransactionFeeDetailsAsync(string TransactionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingBusinessGetTransactionsResult>> AccountingBusinessGetTransactionsAsync(string ZoneID, string TransCode, string Status, string StartDate, string EndDate, string TransactionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingBusinessGetTransactionWarrantyDetailsResult>> AccountingBusinessGetTransactionWarrantyDetailsAsync(string TransactionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ACCOUNTINGBUSINESSGETVOUCHERDETAILResult>> ACCOUNTINGBUSINESSGETVOUCHERDETAILAsync(string VouchersID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ACCOUNTINGBUSINESSGETVOUCHERSResult>> ACCOUNTINGBUSINESSGETVOUCHERSAsync(string ZoneID, string VouchersType, string Status, string StartDate, string EndDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportBalanceSheetDetailsResult>> AccountingReportBalanceSheetDetailsAsync(string FromDate, string EndDate, string ObjectValue, string AccountNumber, string ZoneID, string GroupBy, string ObjectType, string FeeID, string ToolID, string BankAccountNumber, string ContractID, string FeeAllocationID, string SupplyID, string StockID, string StaffID, string CustomerID, string IncidentID, string ProvisionID, string FixedAssetID, string BranchID, string GroupID, string AccVoucherNoID, string PromotionID, string MemberID, string ReciprocalAccount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportBalanceSheetDetailsForBANGCANDOIKETOANResult>> AccountingReportBalanceSheetDetailsForBANGCANDOIKETOANAsync(string FromDate, string EndDate, string ObjectValue, string AccountNumber, string ZoneID, string GroupBy, string ObjectType, string FeeID, string ToolID, string BankAccountNumber, string ContractID, string FeeAllocationID, string SupplyID, string StockID, string StaffID, string CustomerID, string IncidentID, string ProvisionID, string FixedAssetID, string BranchID, string GroupID, string AccVoucherNoID, string PromotionID, string MemberID, string ReciprocalAccount, string TableDateName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportBalanceSheetDetailsForTranferResult>> AccountingReportBalanceSheetDetailsForTranferAsync(string FromDate, string EndDate, string ObjectValue, string AccountNumber, string ZoneID, string GroupBy, string ObjectType, string FeeID, string ToolID, string BankAccountNumber, string ContractID, string FeeAllocationID, string SupplyID, string StockID, string StaffID, string CustomerID, string IncidentID, string ProvisionID, string FixedAssetID, string BranchID, string GroupID, string AccVoucherNoID, string PromotionID, string MemberID, string ReciprocalAccount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportBalanceSheetDetailsForTranfer_oldResult>> AccountingReportBalanceSheetDetailsForTranfer_oldAsync(string FromDate, string EndDate, string ObjectValue, string AccountNumber, string ZoneID, string GroupBy, string ObjectType, string ReciprocalAccount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportBalanceSheetDetailsForTranferTestResult>> AccountingReportBalanceSheetDetailsForTranferTestAsync(string FromDate, string EndDate, string ObjectValue, string AccountNumber, string ZoneID, string GroupBy, string ObjectType, string FeeID, string ToolID, string BankAccountNumber, string ContractID, string FeeAllocationID, string SupplyID, string StockID, string StaffID, string CustomerID, string IncidentID, string ProvisionID, string FixedAssetID, string BranchID, string GroupID, string AccVoucherNoID, string PromotionID, string MemberID, string ReciprocalAccount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportBalanceSheetDetailsTestResult>> AccountingReportBalanceSheetDetailsTestAsync(string FromDate, string EndDate, string ObjectValue, string AccountNumber, string ZoneID, string GroupBy, string ObjectType, string FeeID, string ToolID, string BankAccountNumber, string ContractID, string FeeAllocationID, string SupplyID, string StockID, string StaffID, string CustomerID, string IncidentID, string ProvisionID, string FixedAssetID, string BranchID, string GroupID, string AccVoucherNoID, string PromotionID, string MemberID, string ReciprocalAccount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportBANGCANDOIKETOANResult>> AccountingReportBANGCANDOIKETOANAsync(string FromDate, string ToDate, string CircularsNumber, string FormNumber, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportBANGCANDOIKETOAN_TESTResult>> AccountingReportBANGCANDOIKETOAN_TESTAsync(string FromDate, string ToDate, string CircularsNumber, string FormNumber, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportDebtVendorResult>> AccountingReportDebtVendorAsync(string FromDate, string EndDate, string ObjectValue, string AccountNumber, string ZoneID, string GroupBy, string ObjectType, string FeeID, string ToolID, string BankAccountNumber, string ContractID, string FeeAllocationID, string SupplyID, string StockID, string StaffID, string CustomerID, string IncidentID, string ProvisionID, string FixedAssetID, string BranchID, string GroupID, string AccVoucherNoID, string PromotionID, string MemberID, string ReciprocalAccount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportDebtVendor_bkResult>> AccountingReportDebtVendor_bkAsync(string FromDate, string EndDate, string ObjectValue, string AccountNumber, string ZoneID, string GroupBy, string ObjectType, string FeeID, string ToolID, string BankAccountNumber, string ContractID, string FeeAllocationID, string SupplyID, string StockID, string StaffID, string CustomerID, string IncidentID, string ProvisionID, string FixedAssetID, string BranchID, string GroupID, string AccVoucherNoID, string PromotionID, string MemberID, string ReciprocalAccount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportDebtVendor_save_20190710Result>> AccountingReportDebtVendor_save_20190710Async(string FromDate, string EndDate, string ObjectValue, string AccountNumber, string ZoneID, string GroupBy, string ObjectType, string ReciprocalAccount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportDebtVendor_tempResult>> AccountingReportDebtVendor_tempAsync(string FromDate, string EndDate, string CustomerID, string AccountNumber, string ZoneID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportDebtVendor_testResult>> AccountingReportDebtVendor_testAsync(string FromDate, string EndDate, string ObjectValue, string AccountNumber, string ZoneID, string GroupBy, string ObjectType, string FeeID, string ToolID, string BankAccountNumber, string ContractID, string FeeAllocationID, string SupplyID, string StockID, string StaffID, string CustomerID, string IncidentID, string ProvisionID, string FixedAssetID, string BranchID, string GroupID, string AccVoucherNoID, string PromotionID, string MemberID, string ReciprocalAccount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportDebtVendorDetailResult>> AccountingReportDebtVendorDetailAsync(string FromDate, string EndDate, string ObjectValue, string AccountNumber, string ZoneID, string GroupBy, string ObjectType, string FeeID, string ToolID, string BankAccountNumber, string ContractID, string FeeAllocationID, string SupplyID, string StockID, string StaffID, string CustomerID, string IncidentID, string ProvisionID, string FixedAssetID, string BranchID, string GroupID, string AccVoucherNoID, string PromotionID, string MemberID, string ReciprocalAccount, string TypeReport, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportDebtVendorDetail_oldResult>> AccountingReportDebtVendorDetail_oldAsync(string FromDate, string EndDate, string ObjectValue, string AccountNumber, string ZoneID, string GroupBy, string ObjectType, string ReciprocalAccount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportDebtVendorDetail_save20190623Result>> AccountingReportDebtVendorDetail_save20190623Async(string FromDate, string EndDate, string ObjectValue, string AccountNumber, string ZoneID, string GroupBy, string ObjectType, string ReciprocalAccount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportDebtVendorDetail_save20191125Result>> AccountingReportDebtVendorDetail_save20191125Async(string FromDate, string EndDate, string ObjectValue, string AccountNumber, string ZoneID, string GroupBy, string ObjectType, string FeeID, string ToolID, string BankAccountNumber, string ContractID, string FeeAllocationID, string SupplyID, string StockID, string StaffID, string CustomerID, string IncidentID, string ProvisionID, string FixedAssetID, string BranchID, string GroupID, string AccVoucherNoID, string PromotionID, string MemberID, string ReciprocalAccount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportDebtVendorDetail2Result>> AccountingReportDebtVendorDetail2Async(string FromDate, string EndDate, string ObjectValue, string AccountNumber, string ZoneID, string GroupBy, string ObjectType, string FeeID, string ToolID, string BankAccountNumber, string ContractID, string FeeAllocationID, string SupplyID, string StockID, string StaffID, string CustomerID, string IncidentID, string ProvisionID, string FixedAssetID, string BranchID, string GroupID, string AccVoucherNoID, string PromotionID, string MemberID, string ReciprocalAccount, string TypeReport, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportDebtVendorDetailTestResult>> AccountingReportDebtVendorDetailTestAsync(string FromDate, string EndDate, string ObjectValue, string AccountNumber, string ZoneID, string GroupBy, string ObjectType, string FeeID, string ToolID, string BankAccountNumber, string ContractID, string FeeAllocationID, string SupplyID, string StockID, string StaffID, string CustomerID, string IncidentID, string ProvisionID, string FixedAssetID, string BranchID, string GroupID, string AccVoucherNoID, string PromotionID, string MemberID, string ReciprocalAccount, string TypeReport, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportDebtVendorDetailtest2Result>> AccountingReportDebtVendorDetailtest2Async(string FromDate, string EndDate, string ObjectValue, string AccountNumber, string ZoneID, string GroupBy, string ObjectType, string FeeID, string ToolID, string BankAccountNumber, string ContractID, string FeeAllocationID, string SupplyID, string StockID, string StaffID, string CustomerID, string IncidentID, string ProvisionID, string FixedAssetID, string BranchID, string GroupID, string AccVoucherNoID, string PromotionID, string MemberID, string ReciprocalAccount, string TypeReport, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportDebtVendorForSOCANDOIKETOANResult>> AccountingReportDebtVendorForSOCANDOIKETOANAsync(string FromDate, string EndDate, string ObjectValue, string AccountNumber, string ZoneID, string GroupBy, string ObjectType, string FeeID, string ToolID, string BankAccountNumber, string ContractID, string FeeAllocationID, string SupplyID, string StockID, string StaffID, string CustomerID, string IncidentID, string ProvisionID, string FixedAssetID, string BranchID, string GroupID, string AccVoucherNoID, string PromotionID, string MemberID, string ReciprocalAccount, OutputParameter<decimal?> SummaryEndCredit, OutputParameter<decimal?> SummaryEndDedit, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportDebtVendorTestResult>> AccountingReportDebtVendorTestAsync(string FromDate, string EndDate, string ObjectValue, string AccountNumber, string ZoneID, string GroupBy, string ObjectType, string FeeID, string ToolID, string BankAccountNumber, string ContractID, string FeeAllocationID, string SupplyID, string StockID, string StaffID, string CustomerID, string IncidentID, string ProvisionID, string FixedAssetID, string BranchID, string GroupID, string AccVoucherNoID, string PromotionID, string MemberID, string ReciprocalAccount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportDetailByOneAccountResult>> AccountingReportDetailByOneAccountAsync(string FromDate, string EndDate, string ObjectValue, string AccountNumber, string ZoneID, string GroupBy, string ObjectType, string FeeID, string ToolID, string BankAccountNumber, string ContractID, string FeeAllocationID, string SupplyID, string StockID, string StaffID, string CustomerID, string IncidentID, string ProvisionID, string FixedAssetID, string BranchID, string GroupID, string AccVoucherNoID, string PromotionID, string MemberID, string ReciprocalAccount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportDetailByOneAccount_loitondau_20200603Result>> AccountingReportDetailByOneAccount_loitondau_20200603Async(string FromDate, string EndDate, string ObjectValue, string AccountNumber, string ZoneID, string GroupBy, string ObjectType, string FeeID, string ToolID, string BankAccountNumber, string ContractID, string FeeAllocationID, string SupplyID, string StockID, string StaffID, string CustomerID, string IncidentID, string ProvisionID, string FixedAssetID, string BranchID, string GroupID, string AccVoucherNoID, string PromotionID, string MemberID, string ReciprocalAccount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportDetailByOneAccount_save20190702Result>> AccountingReportDetailByOneAccount_save20190702Async(string FromDate, string EndDate, string ObjectValue, string AccountNumber, string ZoneID, string GroupBy, string ObjectType, string FeeID, string ToolID, string BankAccountNumber, string ContractID, string FeeAllocationID, string SupplyID, string StockID, string StaffID, string CustomerID, string IncidentID, string ProvisionID, string FixedAssetID, string BranchID, string GroupID, string AccVoucherNoID, string PromotionID, string MemberID, string ReciprocalAccount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportDetailByOneAccount_TMPOLDResult>> AccountingReportDetailByOneAccount_TMPOLDAsync(string FromDate, string EndDate, string ObjectValue, string AccountNumber, string ZoneID, string GroupBy, string ObjectType, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportDetailByOneAccount11111Result>> AccountingReportDetailByOneAccount11111Async(string FromDate, string EndDate, string ObjectValue, string AccountNumber, string ZoneID, string GroupBy, string ObjectType, string FeeID, string ToolID, string BankAccountNumber, string ContractID, string FeeAllocationID, string SupplyID, string StockID, string StaffID, string CustomerID, string IncidentID, string ProvisionID, string FixedAssetID, string BranchID, string GroupID, string AccVoucherNoID, string PromotionID, string MemberID, string ReciprocalAccount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportDetailByOneAccountParamResult>> AccountingReportDetailByOneAccountParamAsync(string FromDate, string EndDate, string ObjectValue, string AccountNumber, string ZoneID, string GroupBy, string ObjectType, string FeeID, string ToolID, string BankAccountNumber, string ContractID, string FeeAllocationID, string SupplyID, string StockID, string StaffID, string CustomerID, string IncidentID, string ProvisionID, string FixedAssetID, string BranchID, string GroupID, string AccVoucherNoID, string PromotionID, string ReciprocalAccount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportDetailByOneAccountTestResult>> AccountingReportDetailByOneAccountTestAsync(string FromDate, string EndDate, string ObjectValue, string AccountNumber, string ZoneID, string GroupBy, string ObjectType, string FeeID, string ToolID, string BankAccountNumber, string ContractID, string FeeAllocationID, string SupplyID, string StockID, string StaffID, string CustomerID, string IncidentID, string ProvisionID, string FixedAssetID, string BranchID, string GroupID, string AccVoucherNoID, string PromotionID, string MemberID, string ReciprocalAccount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportGeneralDiaryResult>> AccountingReportGeneralDiaryAsync(string FromDate, string ToDate, string AccountNumber, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportGetTransactionDetailsResult>> AccountingReportGetTransactionDetailsAsync(string TransactionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportItemSummaryResult>> AccountingReportItemSummaryAsync(string FromDate, string EndDate, string ObjectValue, string AccountNumber, string ZoneID, string GroupBy, string ObjectType, string FeeID, string ToolID, string BankAccountNumber, string ContractID, string FeeAllocationID, string SupplyID, string StockID, string StaffID, string CustomerID, string IncidentID, string ProvisionID, string FixedAssetID, string BranchID, string GroupID, string AccVoucherNoID, string PromotionID, string MemberID, string ReciprocalAccount, string TypeReport, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportLUUCHUYENTIENTEResult>> AccountingReportLUUCHUYENTIENTEAsync(string FromDate, string ToDate, string CircularsNumber, string FormNumber, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportSumaryFeeIDResult>> AccountingReportSumaryFeeIDAsync(string FromDate, string EndDate, string ObjectValue, string AccountNumber, string ZoneID, string GroupBy, string ObjectType, string FeeID, string ToolID, string BankAccountNumber, string ContractID, string FeeAllocationID, string SupplyID, string StockID, string StaffID, string CustomerID, string IncidentID, string ProvisionID, string FixedAssetID, string BranchID, string GroupID, string AccVoucherNoID, string PromotionID, string MemberID, string ReciprocalAccount, string TypeReport, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportSumaryFeeID_testResult>> AccountingReportSumaryFeeID_testAsync(string FromDate, string EndDate, string ObjectValue, string AccountNumber, string ZoneID, string GroupBy, string ObjectType, string FeeID, string ToolID, string BankAccountNumber, string ContractID, string FeeAllocationID, string SupplyID, string StockID, string StaffID, string CustomerID, string IncidentID, string ProvisionID, string FixedAssetID, string BranchID, string GroupID, string AccVoucherNoID, string PromotionID, string MemberID, string ReciprocalAccount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportSummarizingBusinessResultsResult>> AccountingReportSummarizingBusinessResultsAsync(string FromDate, string ToDate, string CircularsNumber, string FormNumber, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportSummarizingBusinessResultsTestResult>> AccountingReportSummarizingBusinessResultsTestAsync(string FromDate, string ToDate, string CircularsNumber, string FormNumber, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportSummarizingBusinessResultsTest2Result>> AccountingReportSummarizingBusinessResultsTest2Async(string FromDate, string ToDate, string CircularsNumber, string FormNumber, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportTotalByOneAccountResult>> AccountingReportTotalByOneAccountAsync(string FromDate, string EndDate, string ObjectValue, string AccountNumber, string ZoneID, string GroupBy, string ObjectType, string ReciprocalAccount, string FeeID, string ToolID, string BankAccountNumber, string ContractID, string FeeAllocationID, string SupplyID, string StockID, string StaffID, string CustomerID, string IncidentID, string ProvisionID, string FixedAssetID, string BranchID, string GroupID, string AccVoucherNoID, string PromotionID, string MemberID, bool? Check, OutputParameter<decimal?> DebitStartValue, OutputParameter<decimal?> CreditStartValue, OutputParameter<decimal?> DebitEndValue, OutputParameter<decimal?> CreditEndValue, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportTotalByOneAccount_1111111Result>> AccountingReportTotalByOneAccount_1111111Async(string FromDate, string EndDate, string ObjectValue, string AccountNumber, string ZoneID, string GroupBy, string ObjectType, string ReciprocalAccount, string FeeID, string ToolID, string BankAccountNumber, string ContractID, string FeeAllocationID, string SupplyID, string StockID, string StaffID, string CustomerID, string IncidentID, string ProvisionID, string FixedAssetID, string BranchID, string GroupID, string AccVoucherNoID, string PromotionID, string MemberID, bool? Check, OutputParameter<decimal?> DebitStartValue, OutputParameter<decimal?> CreditStartValue, OutputParameter<decimal?> DebitEndValue, OutputParameter<decimal?> CreditEndValue, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportTotalByOneAccount_bkResult>> AccountingReportTotalByOneAccount_bkAsync(string FromDate, string EndDate, string ObjectValue, string AccountNumber, string ZoneID, string GroupBy, string ObjectType, string ReciprocalAccount, string FeeID, string ToolID, string BankAccountNumber, string ContractID, string FeeAllocationID, string SupplyID, string StockID, string StaffID, string CustomerID, string IncidentID, string ProvisionID, string FixedAssetID, string BranchID, string GroupID, string AccVoucherNoID, string PromotionID, string MemberID, bool? Check, OutputParameter<decimal?> DebitStartValue, OutputParameter<decimal?> CreditStartValue, OutputParameter<decimal?> DebitEndValue, OutputParameter<decimal?> CreditEndValue, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportTotalByOneAccount_bk_20201225Result>> AccountingReportTotalByOneAccount_bk_20201225Async(string FromDate, string EndDate, string ObjectValue, string AccountNumber, string ZoneID, string GroupBy, string ObjectType, string ReciprocalAccount, string FeeID, string ToolID, string BankAccountNumber, string ContractID, string FeeAllocationID, string SupplyID, string StockID, string StaffID, string CustomerID, string IncidentID, string ProvisionID, string FixedAssetID, string BranchID, string GroupID, string AccVoucherNoID, string PromotionID, string MemberID, bool? Check, OutputParameter<decimal?> DebitStartValue, OutputParameter<decimal?> CreditStartValue, OutputParameter<decimal?> DebitEndValue, OutputParameter<decimal?> CreditEndValue, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportTotalByOneAccount_save_20190704Result>> AccountingReportTotalByOneAccount_save_20190704Async(string FromDate, string EndDate, string ObjectValue, string AccountNumber, string ZoneID, string GroupBy, string ObjectType, string ReciprocalAccount, string FeeID, string ToolID, string BankAccountNumber, string ContractID, string FeeAllocationID, string SupplyID, string StockID, string StaffID, string CustomerID, string IncidentID, string ProvisionID, string FixedAssetID, string BranchID, string GroupID, string AccVoucherNoID, string PromotionID, string MemberID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportTotalByOneAccount1Result>> AccountingReportTotalByOneAccount1Async(string FromDate, string EndDate, string ObjectValue, string AccountNumber, string ZoneID, string GroupBy, string ObjectType, string ReciprocalAccount, string FeeID, string ToolID, string BankAccountNumber, string ContractID, string FeeAllocationID, string SupplyID, string StockID, string StaffID, string CustomerID, string IncidentID, string ProvisionID, string FixedAssetID, string BranchID, string GroupID, string AccVoucherNoID, string PromotionID, string MemberID, bool? Check, OutputParameter<decimal?> DebitStartValue, OutputParameter<decimal?> CreditStartValue, OutputParameter<decimal?> DebitEndValue, OutputParameter<decimal?> CreditEndValue, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingReportTotalByOneAccountTestResult>> AccountingReportTotalByOneAccountTestAsync(string FromDate, string EndDate, string ObjectValue, string AccountNumber, string ZoneID, string GroupBy, string ObjectType, string ReciprocalAccount, string FeeID, string ToolID, string BankAccountNumber, string ContractID, string FeeAllocationID, string SupplyID, string StockID, string StaffID, string CustomerID, string IncidentID, string ProvisionID, string FixedAssetID, string BranchID, string GroupID, string AccVoucherNoID, string PromotionID, string MemberID, bool? Check, OutputParameter<decimal?> DebitStartValue, OutputParameter<decimal?> CreditStartValue, OutputParameter<decimal?> DebitEndValue, OutputParameter<decimal?> CreditEndValue, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountingSystemCheckDeleteAccountResult>> AccountingSystemCheckDeleteAccountAsync(string AccountNumber, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> CategoriesGetAppendixNumberAsync(string ContractNumber, OutputParameter<string> AppendixNumber, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CategoriesGetContractAppendixByContractNumberResult>> CategoriesGetContractAppendixByContractNumberAsync(string ContractNumber, string AppendixNumber, string Status, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CategoriesGetContractDetailByContractNumberResult>> CategoriesGetContractDetailByContractNumberAsync(string ContractNumber, string AppendixNumber, string Status, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CategoriesGetContractDetailByCustomerIDResult>> CategoriesGetContractDetailByCustomerIDAsync(string CustomerID, string Status, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CategoriesGetContractDetailNotByAppendixNumberResult>> CategoriesGetContractDetailNotByAppendixNumberAsync(string ContractNumber, string AppendixNumber, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CategoriesGetContractPaymentByContractNumberResult>> CategoriesGetContractPaymentByContractNumberAsync(string ContractNumber, string AppendixNumber, string Status, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CategoriesGetContractPaymentNotByAppendixNumberResult>> CategoriesGetContractPaymentNotByAppendixNumberAsync(string ContractNumber, string AppendixNumber, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CategoriesGetContractsResult>> CategoriesGetContractsAsync(string ContractNumber, string CustomerID, string Status, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CategoriesgetStationsResult>> CategoriesgetStationsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CategoriesgetStationsByUserIDResult>> CategoriesgetStationsByUserIDAsync(string UserID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CategoriesgetStationsByUserNameResult>> CategoriesgetStationsByUserNameAsync(string UserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CategoriesgetStationsByZoneIDResult>> CategoriesgetStationsByZoneIDAsync(string ZoneID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GETXNTKHOResult>> GETXNTKHOAsync(DateTime? Tungay, DateTime? Denngay, string Makho, string Masieuthi, string Manhacc, string Manganhhang, string Manhomhang, string Dbxntname, string Madonvi, string TABLE_NAME, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReportsExportAccumulationDetailByCustomerResult>> ReportsExportAccumulationDetailByCustomerAsync(string CusId, string Fromdate, string Todate, string CusCardNo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReportsExportAccumulationTotalReportResult>> ReportsExportAccumulationTotalReportAsync(string CusId, string CusCardNo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> ReportsExportCUSTOMER_SUMAsync(string ZoneId, string StockId, string CusId, string GoodId, string BranchID, string GroupID, string UserID, string FromDate, string ToDate, string SupId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReportsExportGoodFlagResult>> ReportsExportGoodFlagAsync(string FromDate, string ToDate, string GoodsID, string Brand, string Group, string SupId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReportsExportGoodFlag_oldResult>> ReportsExportGoodFlag_oldAsync(string FromDate, string ToDate, string GoodsID, string Brand, string Group, string SupId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> ReportsExportINNERAsync(string ZoneId, string StockId, string CusId, string GoodId, string BranchID, string GroupID, string UserID, string FromDate, string ToDate, string SupID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReportsExportInner_SumResult>> ReportsExportInner_SumAsync(string FromDate, string ToDate, string TransCode, string ZoneId, string StockId, string GoodId, string BranchID, string GroupID, string CusId, string TranID, string SupId, string UserID, string Groupby, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReportsExportRateAutoExportResult>> ReportsExportRateAutoExportAsync(string FromDate, string ToDate, string Stock, string GoodsID, string Brand, string Group, string ObjOrderid, string SupId, string OrderID, string Groupby, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReportsExportRateAutoExport_oldResult>> ReportsExportRateAutoExport_oldAsync(string FromDate, string ToDate, string Stock, string GoodsID, string Brand, string Group, string ObjOrderid, string SupId, string OrderID, string Groupby, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReportsExportRateAutoExportTestResult>> ReportsExportRateAutoExportTestAsync(string FromDate, string ToDate, string Stock, string GoodsID, string Brand, string Group, string ObjOrderid, string SupId, string OrderID, string Groupby, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> ReportsExportRETAILAsync(string ZoneId, string StockId, string CusId, string GoodId, string BranchID, string GroupID, string UserID, string FromDate, string ToDate, string TransCode, string SupId, string TransactionID, string Status, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> ReportsExportRETAIL_NEGATIVEAsync(string ZoneId, string StockId, string CusId, string GoodId, string BranchID, string GroupID, string UserID, string FromDate, string ToDate, string TransCode, string SupId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> ReportsExportRETAIL_SUMAsync(string ZoneId, string StockId, string StationId, string UserID, string FromDate, string ToDate, string TransCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> ReportsExportRETAILNotPayAsync(string ZoneId, string StockId, string CusId, string GoodId, string BranchID, string GroupID, string UserID, string FromDate, string ToDate, string TransCode, string SupId, string TransactionID, string Status, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReportsExportRetailSummaryResult>> ReportsExportRetailSummaryAsync(string FromDate, string ToDate, string Stock, string GoodsID, string Brand, string Group, string TranCode, string SupId, string TransactionID, string Groupby, string Status, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReportsExportRetailSummaryNotPayResult>> ReportsExportRetailSummaryNotPayAsync(string FromDate, string ToDate, string Stock, string GoodsID, string Brand, string Group, string TranCode, string SupId, string UserId, string TransactionID, string Groupby, string Status, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> ReportsExportTOCUSTOMERAsync(string ZoneID, string StockID, string CusID, string GoodID, string BranchID, string GroupID, string UserID, string FromDate, string ToDate, string SupId, string StaffID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> ReportsExportTOPROVIDERAsync(string ZoneId, string StockId, string SupId, string CusId, string GoodId, string BranchID, string GroupID, string UserID, string FromDate, string ToDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReportsExportWholesaleResult>> ReportsExportWholesaleAsync(string FromDate, string ToDate, string TransCode, string ZoneId, string StockId, string GoodId, string BranchID, string GroupID, string CusId, string TranID, string SupId, string UserID, string StaffID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReportsExportWholesale_SumResult>> ReportsExportWholesale_SumAsync(string FromDate, string ToDate, string TransCode, string ZoneId, string StockId, string GoodId, string BranchID, string GroupID, string CusId, string TranID, string SupId, string UserID, string Groupby, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> ReportsImportCUSTOMER_SUMAsync(string ZoneId, string StockId, string CusId, string GoodId, string BranchID, string GroupID, string UserID, string FromDate, string ToDate, string SupId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> ReportsImportFROMPROVIDERAsync(string ZoneId, string StockId, string CusId, string GoodId, string BranchID, string GroupID, string UserID, string FromDate, string ToDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReportsImportImpSummaryResult>> ReportsImportImpSummaryAsync(string FromDate, string ToDate, string Stock, string GoodsID, string Brand, string Group, string TranCode, string SupId, string TransactionID, string Groupby, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> ReportsImportINNERAsync(string ZoneId, string StockId, string CusId, string GoodId, string BranchID, string GroupID, string UserID, string FromDate, string ToDate, string SupID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> ReportsImportINNER_SUMAsync(string ZoneId, string StockId, string CusId, string GoodId, string BranchID, string GroupID, string UserID, string FromDate, string ToDate, string SupId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReportsImportINNER_SUM2Result>> ReportsImportINNER_SUM2Async(string FromDate, string ToDate, string TransCode, string ZoneId, string StockId, string GoodId, string BranchID, string GroupID, string CusId, string TranID, string SupId, string UserID, string Groupby, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> ReportsImportRETAILAsync(string ZoneId, string StockId, string CusId, string GoodId, string BranchID, string GroupID, string UserID, string FromDate, string ToDate, string TransCode, string TransactionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> ReportsImportRETAIL_SUMAsync(string ZoneId, string StockId, string StationId, string UserID, string FromDate, string ToDate, string TransCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReportsImportSummaryFromProviderResult>> ReportsImportSummaryFromProviderAsync(string FromDate, string ToDate, string TransCode, string ZoneId, string StockId, string GoodId, string BranchID, string GroupID, string CusId, string TranID, string SupId, string UserID, string Groupby, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> ReportsStockNEGATIVEAsync(string ZoneId, string StockId, string CusId, string GoodId, string BranchID, string GroupID, string UserID, string TransCode, string SupId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReportsStockOverMaxMinResult>> ReportsStockOverMaxMinAsync(string StockID1, string Brand1, string Group1, string SupID1, string GoodsID1, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReportsStockOverMaxMin_oldResult>> ReportsStockOverMaxMin_oldAsync(string StockID1, string Brand1, string Group1, string SupID1, string GoodsID1, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> ReportsTransCHECKSTATISTICAsync(string ZoneId, string StockId, string GoodId, string BranchID, string GroupID, string UserID, string FromDate, string ToDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> ReportsTransGETDETAIL_EXPAsync(string ZoneId, string StockId, string CusId, string GoodId, string BranchID, string GroupID, string UserID, string FromDate, string ToDate, string TransCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> ReportsTransGETDETAIL_IMPAsync(string ZoneId, string StockId, string CusId, string GoodId, string BranchID, string GroupID, string UserID, string FromDate, string ToDate, string TransCode, string SupID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> ReportsTransGetRetailsAsync(string ZoneId, string GoodId, string BranchID, string GroupID, string SupplierID, string TuNgay, string DenNgay, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> ReportsTransferINZONEAsync(string ZoneId, string StockId, string CusId, string GoodId, string BranchID, string GroupID, string UserID, string FromDate, string ToDate, string TransCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> set_trannumberAsync(string vctype, string vcode_type, OutputParameter<string> plast_num, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SystemCommonAddzeroAsync(int? vlen, int? vnum, OutputParameter<string> outnumber, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemCommonBarcoderotateResult>> SystemCommonBarcoderotateAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemCommonBarcoderotate_PacketResult>> SystemCommonBarcoderotate_PacketAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemCommonBarcoderotate_Packet_printstampResult>> SystemCommonBarcoderotate_Packet_printstampAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemCommonchangesysdateResult>> SystemCommonchangesysdateAsync(string changgeto, OutputParameter<string> newdate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemCommonchangesysdateAutoResult>> SystemCommonchangesysdateAutoAsync(string changgeto, OutputParameter<string> newdate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemCommonCheckcatalogResult>> SystemCommonCheckcatalogAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemCommonCheckIDResult>> SystemCommonCheckIDAsync(string pcode_type, OutputParameter<string> plast_num, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemCommonFomulaSeparatorResult>> SystemCommonFomulaSeparatorAsync(string Array, string Fromdate, string Todate, string VReciprocalAccount, string PS_SD, string IncidentSign, string ValueSign, string CheckDate, OutputParameter<decimal?> KQ, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SystemCommonFomulaSeparator2Async(string Array, DataTable SummarizingBusinesType, OutputParameter<decimal?> KQ, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemCommonFomulaSeparatorForBANGCANDOIKETOANResult>> SystemCommonFomulaSeparatorForBANGCANDOIKETOANAsync(string Array, string Fromdate, string Todate, string VReciprocalAccount, string PS_SD, string IncidentSign, string ValueSign, string CheckDate, OutputParameter<decimal?> KQ, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemCommonFomulaSeparatorForLUUCHUYENTIENTEResult>> SystemCommonFomulaSeparatorForLUUCHUYENTIENTEAsync(string Array, string Fromdate, string Todate, string VReciprocalAccount, string PS_SD, string IncidentSign, string ValueSign, string CheckDate, OutputParameter<decimal?> KQ, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SystemCommonGetAmountFromAccountingAsync(string FromDate, string EndDate, string AccountNumber, string ReciprocalAccount, string TypeAcount, string PS_SD, string VIncidentSign, string ValueSign, string Negative, OutputParameter<decimal?> AmountOut, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemCommonGetAmountFromAccountingForBANGCANDOIKETOANResult>> SystemCommonGetAmountFromAccountingForBANGCANDOIKETOANAsync(string FromDate, string EndDate, string AccountNumber, string ReciprocalAccount, string TypeAcount, string PS_SD, string VIncidentSign, string ValueSign, string Negative, OutputParameter<decimal?> AmountOut, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SystemCommongetDateCodeAsync(int? vType, OutputParameter<string> vExpireDate, OutputParameter<string> vExpireCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SystemCommongetTrannumberAsync(string vctype, string vcode_type, string ZoneID, OutputParameter<string> plast_num, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SystemCommongetTrannumber1Async(string vctype, string vcode_type, OutputParameter<string> plast_num, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SystemCommonLastBusinessDateAsync(string Fromdate, string Todate, OutputParameter<string> LastFromDate, OutputParameter<string> LastToDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemCommonListAccountResult>> SystemCommonListAccountAsync(string AcountList, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemCommonListContractByCustomersResult>> SystemCommonListContractByCustomersAsync(string CustomerID, string Status, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SystemCommonset_trannumberAsync(string vctype, string vcode_type, string ZoneID, OutputParameter<string> plast_num, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SystemCommonset_trannumber1Async(string vctype, string vcode_type, OutputParameter<string> plast_num, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SystemCommonset_VoucherNumberAsync(string VoucherTypeCategory, OutputParameter<string> VoucherNumber, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemConfigurationgetSysParamsResult>> SystemConfigurationgetSysParamsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemConfigurationgetSysParamsByAllParamsResult>> SystemConfigurationgetSysParamsByAllParamsAsync(string SysParamName, int? SysParamType, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemConfigurationgetSysParamsByParamNameResult>> SystemConfigurationgetSysParamsByParamNameAsync(string SysParamName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemConfigurationgetSysParamsByParamNameParamTypeResult>> SystemConfigurationgetSysParamsByParamNameParamTypeAsync(string SysParamName, int? SysParamType, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemConfigurationgetSysParamsByParamTypeResult>> SystemConfigurationgetSysParamsByParamTypeAsync(int? SysParamType, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemLogginggetLogsResult>> SystemLogginggetLogsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SystemLogginggetLogsByAllParamsAsync(DateTime? FDate, DateTime? TDate, string ZoneID, string StationID, string UserID, string FormID, string ControlID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemLogginggetLogsByControlIDResult>> SystemLogginggetLogsByControlIDAsync(string ControlID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemLogginggetLogsByFormIDResult>> SystemLogginggetLogsByFormIDAsync(string FormID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemLogginggetLogsByStationIDResult>> SystemLogginggetLogsByStationIDAsync(string StationID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemLogginggetLogsByUserIDResult>> SystemLogginggetLogsByUserIDAsync(string UserID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemLogginggetLogsByZoneIDResult>> SystemLogginggetLogsByZoneIDAsync(string ZoneID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemMenusgetMenusResult>> SystemMenusgetMenusAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemMenusgetMenusByAllParamsResult>> SystemMenusgetMenusByAllParamsAsync(string UserID, string MenuID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemMenusgetMenusByUserIDResult>> SystemMenusgetMenusByUserIDAsync(string UserID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemMenusgetMenusByUserIDMenuIDResult>> SystemMenusgetMenusByUserIDMenuIDAsync(string UserID, string MenuID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemMenusgetMenusByUserIDZoneIDResult>> SystemMenusgetMenusByUserIDZoneIDAsync(string UserID, string ZoneID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemSecuritygetPermmissionFromRoleByUserIDRoleIDZoneIDResult>> SystemSecuritygetPermmissionFromRoleByUserIDRoleIDZoneIDAsync(string RoleID, string ZoneID, string UserID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockAutProcessNegtiveResult>> SystemStockAutProcessNegtiveAsync(string STOCKRETAIL, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockCreateEndingInventResult>> SystemStockCreateEndingInventAsync(string Fromdate, string TableOut, string Stock, string Brand, string Group, string SupID, string GoodsID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SystemStockCreateMarkinfoAsync(string Fromdate, string TableOut, string Stock, string Brand, string Group, string SupID, string GoodsID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockGetListChangePriceResult>> SystemStockGetListChangePriceAsync(string Fromdate, string StockID, string TransID, string CreatedBy, string GoodsID, DataTable CategoryGoodIDs, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockGetListChangePricePacketsResult>> SystemStockGetListChangePricePacketsAsync(string TransID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockGetListChangePriceTestResult>> SystemStockGetListChangePriceTestAsync(string Fromdate, string StockID, string TransID, string CreatedBy, string GoodsID, DataTable CategoryGoodIDs, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockGetListForOrderResult>> SystemStockGetListForOrderAsync(string Fromdate, string Todate, string StockID, string SupplyID, string Brand, string Group, string GoodsID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockGetListForOrder_testResult>> SystemStockGetListForOrder_testAsync(string Fromdate, string Todate, string StockID, string SupplyID, string Brand, string Group, string GoodsID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockGetListForOrdertessResult>> SystemStockGetListForOrdertessAsync(string Fromdate, string Todate, string StockID, string SupplyID, string Brand, string Group, string GoodsID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockGetListForOrdertestResult>> SystemStockGetListForOrdertestAsync(string Fromdate, string Todate, string StockID, string SupplyID, string Brand, string Group, string GoodsID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockGetListForScanResult>> SystemStockGetListForScanAsync(string TransID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockGetListGoodFlagResult>> SystemStockGetListGoodFlagAsync(string SupplyID, string Brand, string Group, string GoodsID, string Status, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockGetMinMaxResult>> SystemStockGetMinMaxAsync(string QtyMinMaxId, string StockID, string SupplyID, string Brand, string Group, string GoodsID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockGetMinMaxTestResult>> SystemStockGetMinMaxTestAsync(string QtyMinMaxId, string StockID, string SupplyID, string Brand, string Group, string GoodsID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockGoodDetailResult>> SystemStockGoodDetailAsync(string FromDate, string Todate, string StockID, string GoodsID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockInventory_updateResult>> SystemStockInventory_updateAsync(string TransID, string Table, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockMakeAutoExportSaleByOrderResult>> SystemStockMakeAutoExportSaleByOrderAsync(string OrderID, string StockID, string SupplyID, string CreateByID, string ImpExpMethodCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockMakeAutoExportSaleByOrder_loiResult>> SystemStockMakeAutoExportSaleByOrder_loiAsync(string OrderID, string StockID, string SupplyID, string CreateByID, string ImpExpMethodCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockMakeAutoExportSaleByOrder2020Result>> SystemStockMakeAutoExportSaleByOrder2020Async(string OrderID, string StockID, string SupplyID, string CreateByID, string ImpExpMethodCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockMakeAutoExportSaleByOrderTestResult>> SystemStockMakeAutoExportSaleByOrderTestAsync(string OrderID, string StockID, string SupplyID, string CreateByID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockMakeAutoImportByInstockResult>> SystemStockMakeAutoImportByInstockAsync(string StockID, string CreateByID, string ImpExpMethodCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockMakeAutoOrdersResult>> SystemStockMakeAutoOrdersAsync(string StockID, string SupplyID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockMakeAutoOrdersTestResult>> SystemStockMakeAutoOrdersTestAsync(string StockID, string SupplyID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockReblanceStatisticResult>> SystemStockReblanceStatisticAsync(string TransactionID, string ExpMethodCode, string ImpMethodCode, string IncidentID, string SupplyID, string CreateByID, OutputParameter<string> Status, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockReblanceStatistic_devResult>> SystemStockReblanceStatistic_devAsync(string TransactionID, string ExpMethodCode, string ImpMethodCode, string IncidentID, string SupplyID, string CreateByID, OutputParameter<string> Status, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockReblanceStatistic_oldResult>> SystemStockReblanceStatistic_oldAsync(string TransactionID, string SupplyID, string CreateByID, OutputParameter<string> Status, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SystemstockReCaculatePriceAsync(string Fromdate, string Zones, string Stock, string Brand, string Group, string SupID, string GoodsID, bool? inventory, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemstockReCaculatePriceSplitNegativeResult>> SystemstockReCaculatePriceSplitNegativeAsync(string Fromdate, string Zones, string Stock, string Brand, string Group, string SupID, string GoodsID, bool? inventory, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemstockSetmarkinfoResult>> SystemstockSetmarkinfoAsync(string Fromdate, string Todate, string condition, string Stock, string Brand, string Group, string SupID, string GoodsID, bool? PreVat, bool? inventory, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockStockinfoResult>> SystemStockStockinfoAsync(string Fromdate, string Todate, string condition, string Stock, string Brand, string Group, string SupID, string GoodsID, bool? PreVat, bool? inventory, string GroupBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockStockinfo_backup20170907Result>> SystemStockStockinfo_backup20170907Async(string Fromdate, string Todate, string condition, string Stock, string Brand, string Group, string SupID, string GoodsID, bool? PreVat, bool? inventory, string GroupBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockStockinfo_backup20190302Result>> SystemStockStockinfo_backup20190302Async(string Fromdate, string Todate, string condition, string Stock, string Brand, string Group, string SupID, string GoodsID, bool? PreVat, bool? inventory, string GroupBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockStockinfo_bakResult>> SystemStockStockinfo_bakAsync(string Fromdate, string Todate, string condition, string Stock, string Brand, string Group, string SupID, string GoodsID, bool? PreVat, bool? inventory, string GroupBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockStockinfo_codingResult>> SystemStockStockinfo_codingAsync(string Fromdate, string Todate, string condition, string Stock, string Brand, string Group, string SupID, string GoodsID, bool? PreVat, bool? inventory, string GroupBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockStockinfo_ducResult>> SystemStockStockinfo_ducAsync(string P_Fromdate, string P_Todate, string condition, string Stock, string Brand, string Group, string SupID, string GoodsID, bool? PreVat, bool? inventory, string GroupBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockStockinfo_stockInDetailResult>> SystemStockStockinfo_stockInDetailAsync(string Fromdate, string Todate, string condition, string Stock, string Brand, string Group, string SupID, string GoodsID, bool? PreVat, bool? inventory, string GroupBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockStockinfo_withcutTransactionResult>> SystemStockStockinfo_withcutTransactionAsync(string Fromdate, string Todate, string condition, string Stock, string Brand, string Group, string SupID, string GoodsID, bool? PreVat, bool? inventory, string GroupBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockStockinfo1Result>> SystemStockStockinfo1Async(string Fromdate, string Todate, string condition, string Stock, string Brand, string Group, string SupID, string GoodsID, bool? PreVat, bool? inventory, string GroupBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockStockinfo2222Result>> SystemStockStockinfo2222Async(string LFromdate, string LTodate, string Lcondition, string LStock, string LBrand, string LGroup, string LSupID, string LGoodsID, bool? LPreVat, bool? Linventory, string LGroupBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockStockinfoAfterExpResult>> SystemStockStockinfoAfterExpAsync(string Fromdate, string Todate, string condition, string Stock, string Brand, string Group, string SupID, string GoodsID, bool? PreVat, bool? inventory, string GroupBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SystemStockStockinforExportSaleByOrderAsync(string Fromdate, string Todate, string condition, string Stock, string Brand, string Group, string SupID, string GoodsID, bool? PreVat, bool? inventory, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockStockinforExportSaleByOrder_oldResult>> SystemStockStockinforExportSaleByOrder_oldAsync(string Fromdate, string Todate, string condition, string Stock, string Brand, string Group, string SupID, string GoodsID, bool? PreVat, bool? inventory, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockStockinforExportSaleByOrderTestResult>> SystemStockStockinforExportSaleByOrderTestAsync(string Fromdate, string Todate, string condition, string Stock, string Brand, string Group, string SupID, string GoodsID, bool? PreVat, bool? inventory, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockStockinforOrderResult>> SystemStockStockinforOrderAsync(string Fromdate, string Todate, string condition, string Stock, string Brand, string Group, string SupID, string GoodsID, bool? PreVat, bool? inventory, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockStockinforRetailsResult>> SystemStockStockinforRetailsAsync(string Fromdate, string Todate, string condition, string Stock, string Brand, string Group, string SupID, string GoodsID, string TblName, bool? PreVat, bool? inventory, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockStockinfoSumbyGoodResult>> SystemStockStockinfoSumbyGoodAsync(string Fromdate, string Todate, string condition, string Stock, string Brand, string Group, string SupID, string GoodsID, bool? PreVat, bool? inventory, string GroupBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockSummaryXNTResult>> SystemStockSummaryXNTAsync(string FromDate, string ToDate, string TransCode, string ZoneId, string StockId, string GoodId, string BranchID, string GroupID, string CusId, string TranID, string SupId, string UserID, string Groupby, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockSummaryXNT_testResult>> SystemStockSummaryXNT_testAsync(string FromDate, string ToDate, string TransCode, string ZoneId, string StockId, string GoodId, string BranchID, string GroupID, string CusId, string TranID, string SupId, string UserID, string Groupby, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockSummaryXNTTestResult>> SystemStockSummaryXNTTestAsync(string FromDate, string ToDate, string TransCode, string ZoneId, string StockId, string GoodId, string BranchID, string GroupID, string CusId, string TranID, string SupId, string UserID, string Groupby, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SystemStockSummaryXNTTest2Result>> SystemStockSummaryXNTTest2Async(string FromDate, string ToDate, string TransCode, string ZoneId, string StockId, string GoodId, string BranchID, string GroupID, string CusId, string TranID, string SupId, string UserID, string Groupby, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SystemStockUpdateChangePriceAsync(decimal? ExpWholePrice, decimal? ExpRetailPrice, string UserID, string GoodsID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<TOOLSQTYMINMAXResult>> TOOLSQTYMINMAXAsync(string QtyMinMaxId, string Status, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ToolsSynchronizeCategorySyncgetCategoriesReferResult>> ToolsSynchronizeCategorySyncgetCategoriesReferAsync(DataTable CategoryData, string TableName, string TableNameRefer, DataTable CategoryData2, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ToolsSynchronizeCategorySyncgetCategoriesRefer2Result>> ToolsSynchronizeCategorySyncgetCategoriesRefer2Async(DataTable CategoryData3, string TableName, string TableNameRefer, DataTable CategoryData2, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ToolsSynchronizeCategorySyncgetNewCategoriesResult>> ToolsSynchronizeCategorySyncgetNewCategoriesAsync(DataTable CategoryData, string StartDate, string EndDate, int? DataFilter, string TableName, DataTable CategoryData2, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ToolsSynchronizeCategorySyncgetNewCategories2Result>> ToolsSynchronizeCategorySyncgetNewCategories2Async(DataTable CategoryData, string StartDate, string EndDate, int? DataFilter, string TableName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ToolsSynchronizeChangePriceSyncGetChangePriceResult>> ToolsSynchronizeChangePriceSyncGetChangePriceAsync(DataTable CategoryData, string StartDate, string EndDate, string TableName, int? DataFilter, string TransCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ToolsSynchronizeOrdersSyncgetOrderDetailResult>> ToolsSynchronizeOrdersSyncgetOrderDetailAsync(DataTable CategoryData, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ToolsSynchronizePromotionSyncGetPromotionResult>> ToolsSynchronizePromotionSyncGetPromotionAsync(DataTable CategoryData, string StartDate, string EndDate, string TableName, int? DataFilter, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ToolsSynchronizePromotionSyncGetPromotionByZoneResult>> ToolsSynchronizePromotionSyncGetPromotionByZoneAsync(DataTable CategoryData, string StartDate, string EndDate, string TableName, int? DataFilter, string ZoneId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ToolsSynchronizeTransactionsSyncGetTransactionsResult>> ToolsSynchronizeTransactionsSyncGetTransactionsAsync(DataTable CategoryData, string StartDate, string EndDate, string TableName, int? DataFilter, string TransCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ToolsSynchronizeTransactionsSyncgetTransDetailResult>> ToolsSynchronizeTransactionsSyncgetTransDetailAsync(DataTable CategoryData, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> TransTRANSACTIONIMPORTGETDATAAsync(string ZoneId, string TransCode, DateTime? TuNgay, DateTime? DenNgay, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> TransactionAdjustmentChangePriceAsync(string TransCode, DateTime? TuNgay, DateTime? DenNgay, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<TRANSACTIONADJUSTMENTINVENTORYGETGOODSBYCONDITIONResult>> TRANSACTIONADJUSTMENTINVENTORYGETGOODSBYCONDITIONAsync(string Fromdate, string Todate, string condition, string Stock, string Brand, string Group, string SupID, string GoodsID, bool? PreVat, bool? inventory, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> TRANSACTIONIMPORTORDERFROMPROVIDERAsync(string ZoneId, string TransCode, DateTime? TuNgay, DateTime? DenNgay, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<TransactionsImportImportRetailgetPacketDetailResult>> TransactionsImportImportRetailgetPacketDetailAsync(string TransactionID, string PacketID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
    }
}
