// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;

namespace DatPhatAcc.MisaDbContext;

public partial class InventoryItemPriceFifo
{
    public Guid InventoryItemFifopriceId { get; set; }

    public Guid InventoryItemId { get; set; }

    public Guid StockId { get; set; }

    public Guid BranchId { get; set; }

    public bool IsPostToManagementBook { get; set; }

    public decimal MainQuantity { get; set; }

    public decimal Amount { get; set; }

    public Guid? OutwardRefId { get; set; }

    public int? OutwardRefType { get; set; }

    public Guid? OutwardRefDetailId { get; set; }

    public DateTime? OutwardPostedDate { get; set; }

    public DateTime? OutwardRefOrder { get; set; }

    public decimal? OutwardMainUnitPrice { get; set; }

    public decimal? MainOutwardQuantity { get; set; }

    public decimal? OutwardAmount { get; set; }

    public int? OutwardSortOrder { get; set; }

    public Guid? InwardRefId { get; set; }

    public DateTime? InwardPostedDate { get; set; }

    public int? InwardRefType { get; set; }

    public Guid? InwardRefDetailId { get; set; }

    public DateTime? InwardRefOrder { get; set; }

    public decimal? InwardMainUnitPrice { get; set; }

    public decimal? InwardMainQuantityBalance { get; set; }

    public decimal? InwardAmountBalance { get; set; }

    public int? InwardSortOrder { get; set; }

    public Guid? AdjustOutwardRefDetailId { get; set; }

    public int? InreportType { get; set; }

    public bool? IsUnUpdateOutwardPrice { get; set; }

    public bool? IsPosted { get; set; }

    /// <summary>
    /// =1: Chung tu nhap kho dieu chinh Gia tri; =0: Chung tu nhap kho thong thuong
    /// </summary>
    public bool? IsAdjust { get; set; }

    public DateTime? OutwardDatetimeDeduct { get; set; }

    public string CodeAllocalte { get; set; }

    public int? InventoryLedgerIdinward { get; set; }

    public bool? IsAllocated { get; set; }

    public int? InventoryLedgerIdoutward { get; set; }

    public string DescriptionRow { get; set; }

    /// <summary>
    /// Giá của nhập khi: lần đầu lấy theo giá CT nhập, sau khi có giảm trừ  cho các CT điều chỉnh phía trước thì thay đổi giá nhập sẽ update vào trường naỳ
    /// </summary>
    public decimal? InwardMainUnitPriceOrigin { get; set; }

    /// <summary>
    /// Giá này dành tính cho hàng mua trả lại sau đó update vào Ledger
    /// </summary>
    public decimal? InwardMainUnitPriceForUpdateLedger { get; set; }

    /// <summary>
    /// Dùng để phân biệt chức năng tính giá khi Ghi sổ và chạy chức năng tính giá; = GuiEmpty khi là chức năng tính giá
    /// </summary>
    public Guid CalculateId { get; set; }

    /// <summary>
    /// Dùng để phân biệt giữa CT giảm trừ và CT xuất ; Là InventoryLedgerID của chứng từ giảm điều chỉnh : VD kiểm kê ; =1: Là giảm trừ ; =0 hoặc NULL  là CT xuất
    /// </summary>
    public int? InventoryLedgerIddeduct { get; set; }

    /// <summary>
    /// =1: là dòng chứa phần tồn xuất chưa hết trước ngày StartDate; =0: Là dòng nhập và phân bổ binh thường
    /// </summary>
    public bool? IsRemainOutwardBeforeStartDate { get; set; }

    public decimal AmountNotRound { get; set; }

    /// <summary>
    /// Đối với dòng nhập khi phân bổ cho dòng xuất:
    /// =1 : Nếu có tham gia xuất cùng với dòng nhập điều chỉnh SL =0; Amount &gt; 0
    /// ; = 0: Nếu không có dòng nhập điều chỉnh( SL=0, Amount &gt; 0) tham gia xuất cùng
    /// </summary>
    public bool? IsAllocateWithAdjust { get; set; }

    /// <summary>
    /// Giá trị xuất của dòng xuất; đối voi CT nhập xuất hết phần cuối cùng , amount này bằng tổng ban đầu trừ đi tổng đã xuất
    /// </summary>
    public decimal? AmountOutwardCalculate { get; set; }

    /// <summary>
    /// =1: Giá xuất đuoc dùng để update lại cho hàng bán trả lại;
    /// =0: Không dùng để  update lại cho hàng bán trả lại;
    /// </summary>
    public bool? IsRowForGetOutwardPriceSareturn { get; set; }

    public decimal MainQuantityNotRound { get; set; }
}