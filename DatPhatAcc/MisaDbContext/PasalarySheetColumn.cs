// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;

namespace DatPhatAcc.MisaDbContext;

/// <summary>
///  Bảng config column cho Bảng lương hàng tháng
/// </summary>
public partial class PasalarySheetColumn
{
    /// <summary>
    /// PK - Bảng config column cho Bảng lương hàng tháng
    /// </summary>
    public Guid PasalarySheetColumnId { get; set; }

    /// <summary>
    /// FK - ID của Bảng lương hàng tháng
    /// </summary>
    public Guid? LayoutId { get; set; }

    /// <summary>
    /// Loại bảng lương
    /// </summary>
    public int? RefType { get; set; }

    /// <summary>
    /// Tên cột trong bảng SalarySheetDetail
    /// </summary>
    public string ColumnName { get; set; }

    /// <summary>
    /// Mã cột (không trùng, dùng trong công thức tính)
    /// </summary>
    public string ColumnCode { get; set; }

    /// <summary>
    /// Caption của cột hiển thị trên bảng lương
    /// </summary>
    public string ColumnCaption { get; set; }

    /// <summary>
    /// Độ rộng cột
    /// </summary>
    public int ColumnWidth { get; set; }

    /// <summary>
    /// Mức hiển thị của cột
    /// </summary>
    public int? ColumnLevel { get; set; }

    /// <summary>
    /// Mã cột mẹ (merged column)
    /// </summary>
    public string ParentColumnName { get; set; }

    /// <summary>
    /// Xác định xem cột có được hiển thị hay không
    /// </summary>
    public bool? Visible { get; set; }

    /// <summary>
    /// Vị trí hiển thị của cột trên layout
    /// </summary>
    public int? VisiblePosition { get; set; }

    /// <summary>
    /// Có cho phép sửa hay ko?
    /// </summary>
    public bool? IsReadOnly { get; set; }

    /// <summary>
    /// Kiểu dữ liệu
    /// </summary>
    public int? DataType { get; set; }

    /// <summary>
    /// Diễn giải
    /// </summary>
    public string Description { get; set; }

    /// <summary>
    /// Công thức tính. Lưu ý: phải valid không để công thức bị cross evaluation. Khi tính toán xong 1 cột phải kiểm tra cột phụ thuộc để tính lại cho các cột phụ thuộc đó.
    /// </summary>
    public string Formula { get; set; }

    /// <summary>
    /// Khoản lương có cần phân bổ chi phí hay ko?
    /// </summary>
    public bool IsExpenseAllocation { get; set; }

    /// <summary>
    /// 1 = Có hạch toán chi phí lương; 0 = Không hạch toán chi phí lương
    /// </summary>
    public int PayrollExpensePost { get; set; }

    /// <summary>
    /// Tài khoản nợ (hạch toán chi phí lương)
    /// </summary>
    public string DebitAccount { get; set; }

    /// <summary>
    /// Tài khoản có (hạch toán chi phí lương)
    /// </summary>
    public string CreditAccount { get; set; }

    /// <summary>
    /// Xác định tính chất của cột: 1 - Có thể thực hiện mọi thao tác; 2 - Không được sửa tên cột; 4 - Không được sử dụng làm cột LabelOnly
    /// </summary>
    public int? SystemColumnType { get; set; }

    /// <summary>
    /// Chi nhánh. Mẫu ngầm định thì BranchID = NULL
    /// </summary>
    public Guid? BranchId { get; set; }

    public bool? UseFormula { get; set; }

    public Guid? ParentId { get; set; }

    public string MisacodeId { get; set; }

    public int? Grade { get; set; }

    public bool? IsGroup { get; set; }

    public bool? IsParent { get; set; }

    public string DescriptionDisplay { get; set; }

    public string ColumnNameDisplay { get; set; }

    public virtual Account CreditAccountNavigation { get; set; }

    public virtual Account DebitAccountNavigation { get; set; }

    public virtual PasalarySheetTemplate Layout { get; set; }
}