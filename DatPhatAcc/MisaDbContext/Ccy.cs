// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable enable
using System;
using System.Collections.Generic;

namespace DatPhatAcc.MisaDbContext;

/// <summary>
/// Danh mục loại tiền
/// </summary>
public partial class Ccy
{
    /// <summary>
    /// Khóa chính của bảng
    /// </summary>
    public string CurrencyId { get; set; } = null!;

    /// <summary>
    /// Tên loại tiền
    /// </summary>
    public string CurrencyName { get; set; } = null!;

    /// <summary>
    /// Tỷ giá
    /// </summary>
    public decimal ExchangeRate { get; set; }

    /// <summary>
    /// Toán tử quy đổi 0=nhân;1=chia
    /// </summary>
    public bool ExchangeRateOperator { get; set; }

    /// <summary>
    /// Ngừng theo dõi
    /// </summary>
    public bool? Inactive { get; set; }

    /// <summary>
    /// Tài khoản tiền mặt ngầm định
    /// </summary>
    public string? Caaccount { get; set; }

    /// <summary>
    /// Tài khoản tiền gửi ngầm định
    /// </summary>
    public string? Baaccount { get; set; }

    /// <summary>
    /// Ký hiệu bắt đầu (Tiếng Việt)
    /// </summary>
    public string? Prefix { get; set; }

    /// <summary>
    /// Đọc tên loại tiền (Tiếng Việt)
    /// </summary>
    public string? Ccyname { get; set; }

    /// <summary>
    /// Đọc phân cách phần thập phân (Tiếng Việt)
    /// </summary>
    public string? DecimalSeperate { get; set; }

    /// <summary>
    /// Đọc số tiền sau phần thập phân (Tiếng Việt)
    /// </summary>
    public string? AfterDecimal { get; set; }

    /// <summary>
    /// Ký hiệu kết thúc (Tiếng Việt)
    /// </summary>
    public string? Subfix { get; set; }

    /// <summary>
    /// Tỷ lệ chuyển đổi (Tiếng Việt)
    /// </summary>
    public decimal? ConvertRate { get; set; }

    /// <summary>
    /// Ký hiệu bắt đầu (Tiếng Anh)
    /// </summary>
    public string? PrefixEng { get; set; }

    /// <summary>
    /// Đọc tên loại tiền (Tiếng Anh)
    /// </summary>
    public string? CcynameEng { get; set; }

    /// <summary>
    /// Đọc phân cách phần thập phân (Tiếng Anh)
    /// </summary>
    public string? DecimalSeperateEng { get; set; }

    /// <summary>
    /// Đọc số tiền sau phần thập phân (Tiếng Anh)
    /// </summary>
    public string? AfterDecimalEng { get; set; }

    /// <summary>
    /// Ký hiệu kết thúc (Tiếng Anh)
    /// </summary>
    public string? SubfixEng { get; set; }

    /// <summary>
    /// Tỷ lệ chuyển đổi (Tiếng Anh)
    /// </summary>
    public decimal? ConvertRateEng { get; set; }

    public string? PrefixDefault { get; set; }

    public string? CcynameDefault { get; set; }

    public string? DecimalSeperateDefault { get; set; }

    public string? AfterDecimalDefault { get; set; }

    public string? SubfixDefault { get; set; }

    public decimal? ConvertRateDefault { get; set; }

    public string? PrefixDefaultEng { get; set; }

    public string? CcynameDefaultEng { get; set; }

    public string? DecimalSeperateDefaultEng { get; set; }

    public string? AfterDecimalDefaultEng { get; set; }

    public string? SubfixDefaultEng { get; set; }

    public decimal? ConvertRateDefaultEng { get; set; }

    /// <summary>
    /// Ví dụ số tiền
    /// </summary>
    public decimal? ExampleAmount { get; set; }

    public int? SortOrder { get; set; }

    /// <summary>
    /// XML lưu danh sách các mệnh giá tiền để hiển thị khi kiểm kê quỹ
    /// </summary>
    public string? ValueOfMoney { get; set; }

    public DateTime? CreatedDate { get; set; }

    public string? CreatedBy { get; set; }

    public DateTime? ModifiedDate { get; set; }

    public string? ModifiedBy { get; set; }

    public bool IsChangeUpdateMethod { get; set; }

    public int UpdateMethod { get; set; }

    public virtual ICollection<Badeposit> Badeposits { get; set; } = new List<Badeposit>();

    public virtual ICollection<BainternalTransfer> BainternalTransfers { get; set; } = new List<BainternalTransfer>();

    public virtual ICollection<Bareconcile> Bareconciles { get; set; } = new List<Bareconcile>();

    public virtual ICollection<BawithDraw> BawithDraws { get; set; } = new List<BawithDraw>();

    public virtual ICollection<Caaudit> Caaudits { get; set; } = new List<Caaudit>();

    public virtual ICollection<Capayment> Capayments { get; set; } = new List<Capayment>();

    public virtual ICollection<Careceipt> Careceipts { get; set; } = new List<Careceipt>();

    public virtual ICollection<CcydetailExchangeRate> CcydetailExchangeRates { get; set; } = new List<CcydetailExchangeRate>();

    public virtual ICollection<GlvoucherCrossEntryDetail> GlvoucherCrossEntryDetails { get; set; } = new List<GlvoucherCrossEntryDetail>();

    public virtual ICollection<GlvoucherDetail> GlvoucherDetails { get; set; } = new List<GlvoucherDetail>();

    public virtual ICollection<Glvoucher> Glvouchers { get; set; } = new List<Glvoucher>();

    public virtual ICollection<InventoryItemPurchaseFixedUnitPrice> InventoryItemPurchaseFixedUnitPrices { get; set; } = new List<InventoryItemPurchaseFixedUnitPrice>();

    public virtual ICollection<InventoryItemPurchaseUnitPrice> InventoryItemPurchaseUnitPrices { get; set; } = new List<InventoryItemPurchaseUnitPrice>();

    public virtual ICollection<InvestmentProject> InvestmentProjects { get; set; } = new List<InvestmentProject>();

    public virtual ICollection<Loanagreement> Loanagreements { get; set; } = new List<Loanagreement>();

    public virtual ICollection<OpeningAccountEntry> OpeningAccountEntries { get; set; } = new List<OpeningAccountEntry>();

    public virtual ICollection<Pucontract> Pucontracts { get; set; } = new List<Pucontract>();

    public virtual ICollection<Pudiscount> Pudiscounts { get; set; } = new List<Pudiscount>();

    public virtual ICollection<Puinvoice> Puinvoices { get; set; } = new List<Puinvoice>();

    public virtual ICollection<Puorder> Puorders { get; set; } = new List<Puorder>();

    public virtual ICollection<Pureturn> Pureturns { get; set; } = new List<Pureturn>();

    public virtual ICollection<Puservice> Puservices { get; set; } = new List<Puservice>();

    public virtual ICollection<Puvoucher> Puvouchers { get; set; } = new List<Puvoucher>();

    public virtual ICollection<Sadiscount> Sadiscounts { get; set; } = new List<Sadiscount>();

    public virtual ICollection<SainvoiceHub> SainvoiceHubs { get; set; } = new List<SainvoiceHub>();

    public virtual ICollection<SainvoicePetroleum> SainvoicePetroleums { get; set; } = new List<SainvoicePetroleum>();

    public virtual ICollection<Sainvoice> Sainvoices { get; set; } = new List<Sainvoice>();

    public virtual ICollection<Saorder> Saorders { get; set; } = new List<Saorder>();

    public virtual ICollection<Sapolicy> Sapolicies { get; set; } = new List<Sapolicy>();

    public virtual ICollection<Saquote> Saquotes { get; set; } = new List<Saquote>();

    public virtual ICollection<Sareturn> Sareturns { get; set; } = new List<Sareturn>();

    public virtual ICollection<Savoucher> Savouchers { get; set; } = new List<Savoucher>();
}